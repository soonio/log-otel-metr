// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: english.proto

package englishclient

import (
	"context"

	"hello/english/english"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = english.Request
	Response = english.Response

	English interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultEnglish struct {
		cli zrpc.Client
	}
)

func NewEnglish(cli zrpc.Client) English {
	return &defaultEnglish{
		cli: cli,
	}
}

func (m *defaultEnglish) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := english.NewEnglishClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
